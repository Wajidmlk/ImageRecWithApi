{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","id","FaceRecognition","imageUrl","box","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","Signin","props","onPasswordChange","event","setState","signInPassword","target","value","onEmailChange","signInEmail","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","onChange","this","type","React","Component","Register","onNameChange","onSubmit","ImageLinkForm","onInputChange","onButtonSubmit","ParticlesOptions","particles","number","density","enale","value_area","intitialState","input","route","joined","App","Usr","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.06c4fd47.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) =>{\r\n\tif(isSignedIn)\r\n\t{\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent:'flex-end'}}>\r\n\t\t\t<p onClick={()=>onRouteChange('signout')}  className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\r\n\t}else{\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent:'flex-end'}}>\r\n\t\t\t<p onClick={()=>onRouteChange('register')} id='Register' className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t<p onClick={()=>onRouteChange('signin')} id='Signin' className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t</nav>\r\n\t\t);\t\r\n\t}\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl,box}) =>{\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='photos' src={imageUrl} width='500px' height='auto' />\r\n\t\t\t\t<div className='bounding-box' \r\n\t\t\t\tstyle={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow,left: box.leftCol}}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank = ({name,entries}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='white f3 '>\r\n\t\t\t\t{`${name} Your current count sum is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Rank;","import React from 'react';\r\n\r\nclass Signin extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tsignInEmail:'',\r\n\t\t\tsignInPassword:''\r\n\t\t}\r\n\t}\r\n\r\n\tonPasswordChange = (event) =>{\r\n\t\tthis.setState({signInPassword:event.target.value});\r\n\t}\r\n\tonEmailChange = (event) =>{\r\n\t\tthis.setState({signInEmail:event.target.value});\r\n\t}\r\n\tonSubmitSignIn =()=>{\r\n\t\tfetch('https://shrouded-temple-28290.herokuapp.com/signin',{\r\n\t\t\tmethod:'post',\r\n\t\t\theaders:{'Content-Type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\temail:this.state.signInEmail,\r\n\t\t\t\tpassword:this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response =>response.json())\r\n\t\t.then(user=>{\r\n\t\t\tif(user.id){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center shadow-5\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email (USE: malik@gmail.com)</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t\t        type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password (USE: 123)</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        onChange={this.onPasswordChange}\r\n\t\t\t\t        type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      onClick={() => this.onSubmitSignIn()}\r\n\t\t\t\t      type=\"button\" \r\n\t\t\t\t      value=\"Sign in\" />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim black db\">Sign up</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Signin;","import React from 'react';\r\nclass Register extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\temail:'',\r\n\t\t\tpassword:'',\r\n\t\t\tname:''\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) =>{\r\n\t\tthis.setState({name:event.target.value});\r\n\t}\r\n\tonPasswordChange = (event) =>{\r\n\t\tthis.setState({password:event.target.value});\r\n\t}\r\n\tonEmailChange = (event) =>{\r\n\t\tthis.setState({email:event.target.value});\r\n\t}\r\n\tonSubmit =()=>{\r\n\t\tfetch('https://shrouded-temple-28290.herokuapp.com/register',{\r\n\t\t\tmethod:'post',\r\n\t\t\theaders:{'Content-Type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\tname:this.state.name,\r\n\t\t\t\temail:this.state.email,\r\n\t\t\t\tpassword:this.state.password\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response =>response.json())\r\n\t\t.then(user=>{\r\n\t\t\tif(user.id){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home')\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\t}\r\n\trender(){\r\n\r\n\treturn(\r\n\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center shadow-5\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t  \r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      \r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input\r\n \t\t\t\t\tonChange={this.onNameChange}   \r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t\t      </div>\r\n\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input\r\n \t\t\t\t\tonChange={this.onEmailChange} \r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      \r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input\r\n \t\t\t\t\tonChange={this.onPasswordChange}\r\n\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    \r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      onClick={() => this.onSubmit()}\r\n\r\n\t\t\t      type=\"button\" \r\n\t\t\t      value=\"Register\" />\r\n\t\t\t    </div>\r\n\t\r\n\t\t\t  \r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n}\r\n}\r\nexport default Register;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange,onButtonSubmit}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t{'Put image link to dectect face in image.....'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className=' form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 br3 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 br3 pv2 dib white bg-light-purple  pointer'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDetect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default ImageLinkForm;","import React,{Component} from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Rank from './components/Rank/Rank';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport './App.css';\r\n\r\nconst ParticlesOptions = {\r\n  particles: {\r\n    number:{\r\n      value:100,\r\n      density:{\r\n        enale:true,value_area:800\r\n       }\r\n    }\r\n  }}\r\nconst intitialState={\r\n  input:'',\r\n  imageUrl:'',\r\n  box:{},\r\n  route:'signin',\r\n  isSignedIn: false,\r\n  user:{\r\n    id:'',\r\n    name:'',\r\n    email:'',\r\n    entries:0,\r\n    joined:''\r\n}\r\n}\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state =intitialState;\r\n  }\r\n  loadUser=(Usr)=>{\r\n    this.setState({user:{\r\n      id:Usr.id,\r\n      name:Usr.name,\r\n      email:Usr.email,\r\n      entries:Usr.entries,\r\n      joined:Usr.joined\r\n    }});\r\n  }\r\n  calculateFaceLocation =(data) =>{\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n  \r\n    const width= Number(image.width);\r\n    const height= Number(image.height);\r\n    return {\r\n      leftCol:clarifaiFace.left_col * width,\r\n      topRow:clarifaiFace.top_row * height,\r\n      rightCol:width - (clarifaiFace.right_col * width),\r\n      bottomRow:height - (clarifaiFace.bottom_row * height)\r\n    }\r\n\r\n  }\r\n\r\n  displayFaceBox = (box) =>{\r\n      this.setState({box:box});\r\n  }\r\n  onInputChange = (event)=>{\r\n    this.setState({input:event.target.value});\r\n  }\r\n  onButtonSubmit = ()=>{\r\n    this.setState({imageUrl:this.state.input});\r\n      fetch('https://shrouded-temple-28290.herokuapp.com/imageurl',{\r\n              method:'post',\r\n              headers:{'Content-Type':'application/json'},\r\n              body:JSON.stringify({input:this.state.input})\r\n      })\r\n        .then(response=>response.json())\r\n        .then(response =>{\r\n          if(response){\r\n            fetch('https://shrouded-temple-28290.herokuapp.com/image',{\r\n              method:'put',\r\n              headers:{'Content-Type':'application/json'},\r\n              body:JSON.stringify(\r\n                {id:this.state.user.id\r\n              })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(count=>{\r\n              this.setState(Object.assign(this.state.user,{entries:count}))\r\n            })\r\n            .catch(console.log)\r\n          }\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n        })\r\n          .catch(err=>console.log(err));\r\n  }\r\n  onRouteChange = (route) =>{\r\n    if(route==='signout'){\r\n      this.setState(intitialState)\r\n    }else if(route==='home'){\r\n      this.setState({isSignedIn:true})\r\n    }\r\n    this.setState({route:route}); \r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const {isSignedIn, route,imageUrl,box} = this.state;\r\n    \r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <Particles className='Particle' params={ParticlesOptions}/>\r\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\r\n        \r\n        { \r\n          (route === 'home')?\r\n            <div>\r\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>    \r\n              <ImageLinkForm \r\n                onInputChange={this.onInputChange} \r\n                onButtonSubmit={this.onButtonSubmit}\r\n              />\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n            </div>\r\n          : (route === 'signin')?\r\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \r\n          :\r\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} isSignedIn={this.isSignedIn}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'; \r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}